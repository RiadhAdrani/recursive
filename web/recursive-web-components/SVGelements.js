module.exports = {
    A: {
        tag: "a",
        props: { href: "string", hrefLang: "string", target: "string", type: "string" },
    },
    Animate: {
        tag: "animate",
        props: {
            begin: "string",
            dur: "string",
            end: "string",
            min: "min",
            max: "",
            restart: "",
            repeatCount: "",
            fill: "",
            calcMode: "",
            values: "",
            keyTimes: "",
            keySplines: "",
            from: "",
            to: "",
            by: "",
            attributeName: "",
            additive: "",
            accumulate: "",
        },
    },
    AnimateMotion: { tag: "animateMotion", props: { keyPoints: "", path: "", rotate: "" } },
    AnimateTransform: { tag: "animateTransform", props: {} },
    Circle: { tag: "circle", props: { cx: "number", cy: "number", r: "number", pathLength: "" } },
    ClipPath: { tag: "clipPath", props: { clipPathUnits: "" } },
    Defs: { tag: "defs", props: {} },
    Desc: { tag: "desc", props: {} },
    Discard: { tag: "discard", props: {} },
    Ellipse: {
        tag: "ellipse",
        props: { cx: "number", cy: "number", rx: "number", ry: "number", pathLength: "" },
    },
    FeBlend: { tag: "feBlend", props: { in: "", in2: "", mode: "" } },
    FeColorMatrix: { tag: "feColorMatrix", props: { in: "", type: "", values: "" } },
    FeComponentTransfer: { tag: "feComponentTransfer", props: {} },
    FeComposite: { tag: "feComposite", props: { in: "" } },
    FeConvolveMatrix: {
        tag: "feConvolveMatrix",
        props: {
            in: "",
            order: "",
            kernelMatrix: "",
            bias: "",
            targetX: "",
            targetY: "",
            edgeMode: "",
            kernelUnitLength: "",
            preserveAlpha: "",
        },
    },
    FeDiffuseLighting: { tag: "feDiffuseLighting", props: {} },
    FeDisplacementMap: { tag: "feDisplacementMap", props: {} },
    FeDistantLight: { tag: "feDistantLight", props: {} },
    FeDropShadow: {
        tag: "feDropShadow",
        props: { id: "", surfaceScale: "", diffuseConstant: "", kernelUnitLength: "" },
    },
    FeFlood: {
        tag: "feFlood",
        props: { floodColor: "", floodOpacity: "" },
    },
    FeFuncA: { tag: "feFuncA", props: {} },
    FeFuncB: { tag: "feFuncB", props: {} },
    FeFuncG: { tag: "feFuncG", props: {} },
    FeFuncR: { tag: "feFuncR", props: {} },
    FeGaussianBlur: { tag: "feGaussianBlur", props: { in: "", stdDeviation: "", edgeMode: "" } },
    FeImage: { tag: "feImage", props: { preserveAspectRatio: "", xLinkHref: "" } },
    FeMerge: { tag: "feMerge", props: {} },
    FeMergeNode: { tag: "feMergeNode", props: { in: "" } },
    FeMorphology: { tag: "feMorphology", props: { in: "", operator: "", radius: "" } },
    FeOffset: { tag: "feOffset", props: { in: "", dx: "", dy: "" } },
    FePointLight: { tag: "fePointLight", props: { x: "", y: "", z: "" } },
    FeSpecularLighting: {
        tag: "feSpecularLighting",
        props: {
            in: "",
            surfaceScale: "",
            specularConstant: "",
            specularExponent: "",
            kernelUnitLength: "",
        },
    },
    FeSpotLight: {
        tag: "feSpotLight",
        props: {
            x: "",
            y: "",
            z: "",
            pointAtX: "",
            pointAtY: "",
            pointAtZ: "",
            specularExponent: "",
            limitingConeAngle: "",
        },
    },
    FeTile: { tag: "feTile", props: { in: "" } },
    FeTurbulence: {
        tag: "feTurbulence",
        props: { baseFrequency: "", numOctaves: "", seed: "", stitchTiles: "", type: "" },
    },
    Filter: {
        tag: "filter",
        props: {
            x: "",
            y: "",
            width: "",
            height: "",
            filterRes: "",
            filterUnits: "",
            primitiveUnits: "",
            xLinkHref: "",
        },
    },
    ForeignObject: { tag: "foreignObject", props: { height: "", width: "", x: "", y: "" } },
    G: { tag: "g", props: {} },
    Hatch: { tag: "hatch", props: {} },
    Hatchpath: { tag: "hatchpath", props: {} },
    Image: {
        tag: "image",
        props: {
            x: "",
            y: "",
            width: "",
            height: "",
            href: "",
            xLinkHref: "",
            preserveAspectRatio: "",
            crossOrigin: "",
        },
    },
    Line: { tag: "line", props: { x1: "", x2: "", y1: "", y2: "", pathLength: "" } },
    LinearGradient: {
        tag: "linearGradient",
        props: {
            gradientUnits: "",
            gradientTransform: "",
            href: "",
            spreadMethod: "",
            x1: "",
            x2: "",
            y1: "",
            y2: "",
        },
    },
    Marker: {
        tag: "marker",
        props: {
            markerHeight: "",
            markerUnits: "",
            markerWidth: "",
            orient: "",
            preserveAspectRatio: "",
            refX: "",
            refY: "",
            viewBox: "",
        },
    },
    Mask: {
        tag: "mask",
        props: {
            height: "",
            maskContentUnits: "",
            maskUnits: "",
            x: "",
            y: "",
            width: "",
        },
    },
    Metadata: { tag: "metadata", props: {} },
    Mpath: { tag: "mpath", props: { xLinkHref: "" } },
    Path: { tag: "path", props: { d: "", pathLength: "" } },
    Pattern: {
        tag: "pattern",
        props: {
            height: "",
            href: "",
            patternContentUnits: "",
            patternTransform: "",
            preserveAspectRatio: "",
            viewBox: "",
            x: "",
        },
    },
    Polygon: { tag: "polygon", props: { points: "", pathLength: "" } },
    Polyline: { tag: "polyline", props: { points: "", pathLength: "" } },
    RadialGradient: {
        tag: "radialGradient",
        props: {
            cx: "",
            cy: "",
            fr: "",
            fx: "",
            fy: "",
            gradientUnits: "",
            gradientTransform: "",
            href: "",
            r: "",
            spreadMethod: "",
        },
    },
    Rect: {
        tag: "rect",
        props: { x: "", y: "", width: "", height: "", rx: "", ry: "", pathLength: "" },
    },
    Set: { tag: "set", props: { to: "" } },
    Stop: { tag: "stop", props: { stopColor: "", stopOpacity: "" } },
    Svg: {
        tag: "svg",
        props: { height: "", preserveAspectRatio: "", viewBox: "", width: "", x: "", y: "" },
    },
    Switch: { tag: "switch", props: {} },
    Symbol: {
        tag: "symbol",
        props: {
            height: "",
            preserveAspectRatio: "",
            refX: "",
            refY: "",
            viewBox: "",
            width: "",
            x: "",
            y: "",
        },
    },
    Text: {
        tag: "text",
        props: { x: "", y: "", dx: "", dy: "", rotate: "", lengthAdjust: "", textLength: "" },
    },
    TextPath: {
        tag: "textPath",
        props: {
            href: "",
            lengthAdjust: "",
            method: "",
            path: "",
            side: "",
            spacing: "",
            startOffset: "",
            textLength: "",
        },
    },
    Title: { tag: "title", props: {} },
    Tspan: {
        tag: "tspan",
        props: { x: "", y: "", dx: "", dy: "", rotate: "", lengthAdjust: "", textLength: "" },
    },
    Use: { tag: "use", props: { href: "", xLinkHref: "", x: "", y: "", width: "", height: "" } },
    View: { tag: "view", props: {} },
};
